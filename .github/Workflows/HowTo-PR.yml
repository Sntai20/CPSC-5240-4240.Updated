name: Node.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: MongooseDB

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install dependencies
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm install

      # Compile TypeScript files
      - name: Compile TypeScript
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npx tsc

      # Start MongoDB service
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1
        with:
          mongodb-version: '5.0'

      # Populate the database with sample data
      - name: Populate MongoDB with sample data
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          if [ -f "createDB/createToDoSampleData.js" ]; then
            mongo --eval "load('createDB/createToDoSampleData.js')"
          else
            echo "Sample data script not found"
          fi

      # Populate the database with admin user
      - name: Populate MongoDB with admin user
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          if [ -f "createDB/createAdminUser.js" ]; then
            mongo --eval "load('createDB/createAdminUser.js')"
          else
            echo "Admin user script not found"
          fi

      # Run tests
      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm test

      # Lint the code (optional)
      - name: Lint code
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npx eslint . --ext .ts

      # Start the server (optional for deployment testing)
      - name: Start server
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          node AppServer.js &
          sleep 5 # Give the server time to start